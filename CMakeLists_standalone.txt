
# Cmake config for NanoShaper
project(NanoShaper) 
cmake_minimum_required(VERSION 2.6.2)
if("${CMAKE_MAJOR_VERSION}.${CMAKE_MINOR_VERSION}" VERSION_GREATER 2.6)
  if("${CMAKE_MAJOR_VERSION}.${CMAKE_MINOR_VERSION}.${CMAKE_PATCH_VERSION}" VERSION_GREATER 2.8.3)
    cmake_policy(VERSION 2.8.4)
  else()
    cmake_policy(VERSION 2.6)
  endif()
endif()

SET(CMAKE_EXPORT_COMPILE_COMMANDS ON)
SET(CMAKE_POSITION_INDEPENDENT_CODE TRUE)

include_directories (BEFORE include)
include_directories(src)
include_directories(src/ConfigFile)
include_directories(src/jama)
include_directories(src/tnt)
include_directories(src/sturm)
include_directories(src/octree)

find_package(Boost COMPONENTS thread)
if (Boost_FOUND)
  link_directories ( ${Boost_LIBRARY_DIRS} )
  link_libraries(${Boost_LIBRARIES})
  include_directories ( ${Boost_INCLUDE_DIRS} )
  include_directories (BEFORE include)
  add_definitions(-DENABLE_BOOST_THREADS)
else (Boost_FOUND)
  message(STATUS "Boost libs not found, Multithreading will be disabled")  
endif (Boost_FOUND)
	
add_subdirectory(src/spdlog)
add_definitions(-DSPDLOG)

# if cgal is found, boost is automatically found
 find_package(CGAL)

  
 file(GLOB SRC
    "./src/*.h"
    "./src/*.cpp")
	
 if (CGAL_FOUND)

	include( ${CGAL_USE_FILE} )		
	add_definitions(-DENABLE_CGAL)
	add_definitions(-DENABLE_BOOST_THREADS)
	
	if (${UNIX}) 
		set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -O3 -mtune=native") 
	endif (${UNIX}) 

		
	add_executable(NanoShaper
								./src/sturm/sturm.cpp
								./src/sturm/util.cpp
								./src/sturm/solve.h
								${SRC}
								./src/ply/ply.cpp
								./src/ply/ply.h								
								./src/ConfigFile/ConfigFile.cpp
								./src/ConfigFile/ConfigFile.h 
								./src/octree/octree.h 
								)    
  target_link_libraries(NanoShaper PRIVATE spdlog::spdlog_header_only)
  
	if (MSVC)
		set_target_properties(NanoShaper PROPERTIES COMPILE_FLAGS "/wd4503")	
		#message(STATUS "Adding optimizations for processor ${CMAKE_SYSTEM_PROCESSOR}")
	endif (MSVC)  

 else(CGAL_FOUND)
		
	message(STATUS "CGAL not found, Skin Surface and Connolly Surface will be disabled")  
	
	if (${UNIX}) 
		set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -O3 -mtune=native") 
	endif (${UNIX}) 
	
	if (MSVC)
		add_definitions(-D_CRT_SECURE_NO_WARNINGS)	
	endif (MSVC)  
	
	if (CMAKE_COMPILER_IS_GNUCXX)		
		#...
	endif (CMAKE_COMPILER_IS_GNUCXX)
	
	if(CMAKE_C_COMPILER MATCHES "icc")
		#..
	endif ()
	
	message(STATUS "C++ Release flags ${CMAKE_CXX_FLAGS_RELEASE}")
	
	add_executable(NanoShaper 	${SRC}
								./src/ply/ply.cpp
								./src/ply/ply.h
								./src/ConfigFile/ConfigFile.cpp
								./src/ConfigFile/ConfigFile.h 
								./src/sturm/sturm.cpp
								./src/sturm/util.cpp 
								./src/sturm/solve.h
								./src/octree/octree.h 
								)    
  target_link_libraries(NanoShaper PRIVATE spdlog::spdlog_header_only)

endif(CGAL_FOUND)
